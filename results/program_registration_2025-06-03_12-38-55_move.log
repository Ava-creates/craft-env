{"timestamp": "2025-06-03T12:38:55.012194", "function_name": "move", "function_body": "  return -1", "island_id": null, "scores": {"UP": 0.0, "DOWN": 0.0, "LEFT": 0.0, "RIGHT": 0.0}}
{"timestamp": "2025-06-03T12:39:09.828671", "function_name": "move", "function_body": "  # Define the mapping from direction strings to action numbers\n  direction_to_action = {\n      \"down\": env.action_specs()[\"DOWN\"],\n      \"up\": env.action_specs()[\"UP\"],\n      \"left\": env.action_specs()[\"LEFT\"],\n      \"right\": env.action_specs()[\"RIGHT\"]\n  }\n  \n  # Return the corresponding action number, or raise an error if invalid direction\n  return direction_to_action.get(dir.lower(), -1)", "island_id": 9, "scores": {"UP": 1.0, "DOWN": 1.0, "LEFT": 1.0, "RIGHT": 1.0}}
{"timestamp": "2025-06-03T12:39:15.924655", "function_name": "move", "function_body": "  if dir == 'down':\n    return 0\n  elif dir == 'up':\n    return 1\n  elif dir == 'left':\n    return 2\n  elif dir == 'right':\n    return 3\n\n  # Return -1 for invalid directions.\n  return -1", "island_id": 9, "scores": {"UP": 0.0, "DOWN": 0.0, "LEFT": 0.0, "RIGHT": 0.0}}
{"timestamp": "2025-06-03T12:39:30.084289", "function_name": "move", "function_body": "  # Dictionary mapping directions to action numbers\n  dir_to_action = {\n    \"DOWN\": 0,\n    \"UP\": 1,\n    \"LEFT\": 2,\n    \"RIGHT\": 3\n  }\n\n  # Return the corresponding action number for the given direction, or -1 if invalid\n  return dir_to_action.get(dir, -1)", "island_id": 0, "scores": {"UP": 1.0, "DOWN": 1.0, "LEFT": 1.0, "RIGHT": 1.0}}
{"timestamp": "2025-06-03T12:39:36.369561", "function_name": "move", "function_body": "  # Map direction strings to action numbers\n  directions = {\n    \"left\": env.ACTION_LEFT,\n    \"right\": env.ACTION_RIGHT,\n    \"up\": env.ACTION_UP,\n    \"down\": env.ACTION_DOWN,\n  }\n  \n  return directions.get(dir, -1) # Returns -1 if invalid direction", "island_id": 0, "scores": {"UP": -1, "DOWN": -1, "LEFT": -1, "RIGHT": -1}}
{"timestamp": "2025-06-03T12:39:53.733671", "function_name": "move", "function_body": "  # Define mapping from directions to actions.\n  direction_to_action = {\n      'down': env.action_specs()['DOWN'],\n      'up': env.action_specs()['UP'],\n      'left': env.action_specs()['LEFT'],\n      'right': env.action_specs()['RIGHT']\n  }\n\n  # Get the action number corresponding to the given direction.\n  action_number = direction_to_action.get(dir, -1)\n\n  return action_number", "island_id": 1, "scores": {"UP": 0.0, "DOWN": 0.0, "LEFT": 0.0, "RIGHT": 0.0}}
{"timestamp": "2025-06-03T12:40:01.148574", "function_name": "move", "function_body": "  action_names = [\n    'DOWN',   # 0\n    'UP',     # 1\n    'LEFT',   # 2\n    'RIGHT'   # 3\n  ]\n  \n  return action_names.index(dir)", "island_id": 1, "scores": {"UP": 1.0, "DOWN": 1.0, "LEFT": 1.0, "RIGHT": 1.0}}
{"timestamp": "2025-06-03T12:40:16.012110", "function_name": "move", "function_body": "  actions = {\n      'UP': 0,\n      'DOWN': 1,\n      'LEFT': 2,\n      'RIGHT': 3\n  }\n\n  action = actions.get(dir)\n  return action", "island_id": 7, "scores": {"UP": 0.0, "DOWN": 0.0, "LEFT": 1.0, "RIGHT": 1.0}}
{"timestamp": "2025-06-03T12:40:22.193738", "function_name": "move", "function_body": "  # Extracting the world and current state from the environment.\n  world = env.world\n  current_state = env._current_state\n\n  if dir == \"up\":\n    action = 1\n  elif dir == \"down\":\n    action = 0\n  elif dir == \"left\":\n    action = 2\n  elif dir == \"right\":\n    action = 3\n  else:\n    raise ValueError(\"Invalid direction\")\n\n  # Perform the move action.\n  reward, done, observations = env.step(action)\n\n  return reward", "island_id": 7, "scores": {"UP": -1, "DOWN": -1, "LEFT": -1, "RIGHT": -1}}
{"timestamp": "2025-06-03T12:40:33.844105", "function_name": "move", "function_body": "  return -1", "island_id": 5, "scores": {"UP": 0.0, "DOWN": 0.0, "LEFT": 0.0, "RIGHT": 0.0}}
{"timestamp": "2025-06-03T12:40:40.789478", "function_name": "move", "function_body": "  assert type(dir) == str\n  assert dir.lower() in [\"left\", \"right\", \"up\", \"down\"], \"Invalid direction.\"\n  \n  actions = {\n      'left': env.action_specs()['LEFT'],\n      'right': env.action_specs()['RIGHT'],\n      'up': env.action_specs()['UP'],\n      'down': env.action_specs()['DOWN']\n    }\n    \n  return actions[dir.lower()]", "island_id": 5, "scores": {"UP": 1.0, "DOWN": 1.0, "LEFT": 1.0, "RIGHT": 1.0}}
{"timestamp": "2025-06-03T12:40:53.001984", "function_name": "move", "function_body": "  # Assuming env has an attribute with action mappings\n  if hasattr(env, \"world\"):\n    actions = env.world.ACTIONS\n    action = actions.get(dir)\n  else:\n    raise AttributeError(\"Environment does not have a 'world' attribute with action mappings.\")\n\n  return action", "island_id": 7, "scores": {"UP": -1, "DOWN": -1, "LEFT": -1, "RIGHT": -1}}
{"timestamp": "2025-06-03T12:40:59.304866", "function_name": "move", "function_body": "  actions = {\n      'UP': 0,\n      'DOWN': 1,\n      'LEFT': 2,\n      'RIGHT': 3\n  }\n\n  action = actions.get(dir)\n  return action", "island_id": 7, "scores": {"UP": 0.0, "DOWN": 0.0, "LEFT": 1.0, "RIGHT": 1.0}}
{"timestamp": "2025-06-03T12:41:17.326328", "function_name": "move", "function_body": "  # Check if the direction is valid\n  if dir not in [\"DOWN\", \"UP\", \"LEFT\", \"RIGHT\"]:\n    raise ValueError(\"Invalid direction\")\n\n  # Return the corresponding action number for the given direction\n  return env.action_specs().index(dir)", "island_id": 0, "scores": {"UP": -1, "DOWN": -1, "LEFT": -1, "RIGHT": -1}}
{"timestamp": "2025-06-03T12:41:24.386102", "function_name": "move", "function_body": "  # Define mapping from directions to actions based on the CraftWorld specifications\n  dir_to_action = {\n    \"DOWN\": 0,\n    \"UP\": 1,\n    \"LEFT\": 2,\n    \"RIGHT\": 3\n  }\n\n  # Validate direction input and return the corresponding action number, or raise ValueError if invalid\n  try:\n    action = dir_to_action[dir]\n    return action\n  except KeyError as e:\n    print(f\"Invalid direction provided: {dir}\")\n    raise ValueError(\"Direction must be one of 'DOWN', 'UP', 'LEFT', 'RIGHT'\") from e", "island_id": 0, "scores": {"UP": 1.0, "DOWN": 1.0, "LEFT": 1.0, "RIGHT": 1.0}}
