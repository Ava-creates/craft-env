{"function_body": "  \"\"\"\n  Returns a list of actions that we will take to craft the item at the item_index.\n  Crafting an item requires collecting the primitives/items needed and then going\n  to one of the workshops to craft the item.\n\n  This function works as follows:\n  1. Determine the primitives required for the given item.\n  2. Collect each primitive if not already in inventory.\n  3. Move to a workshop where the item can be crafted.\n  4. Craft the item using the collected primitives.\n  \"\"\"\n  actions = []\n  cookbook = env.world.cookbook\n  inventory = env._current_state.inventory\n\n  # Determine the primitives required for the given item.\n  primitives = cookbook.primitives_for(item_index)\n\n  # Collect each primitive if not already in inventory.\n  for primitive, count in primitives.items():\n    while inventory[primitive] < count:\n      # Move to a location with the primitive and collect it\n      actions.extend(collect_primitive(env, primitive))\n      # Update inventory after collecting\n      inventory = env._current_state.inventory\n\n  # Move to a workshop where the item can be crafted.\n  workshops = cookbook.workshops_for(item_index)\n  if not workshops:\n    raise Exception(f\"No workshop found for crafting item {item_index}\")\n\n  # Assume we move to the first available workshop\n  workshop_location = get_workshop_location(env, workshops[0])\n  actions.extend(move_to_location(env, workshop_location))\n\n  # Craft the item using the collected primitives.\n  actions.append(env.action_specs()['USE'])\n  \n  return actions\n", "scores": [-1, false]}
